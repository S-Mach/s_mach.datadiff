= s_mach.datadiff: data difference engine
Lance Gatlin <lance.gatlin@gmail.com>
v2,23-Dec-2014
:blogpost-status: unpublished
:blogpost-categories: s_mach, scala

*UNDER CONSTRUCTION*

image:https://travis-ci.org/S-Mach/s_mach.datadiff.svg[Build Status, link="https://travis-ci.org/S-Mach/s_mach.datadiff"]  image:https://coveralls.io/repos/S-Mach/s_mach.datadiff/badge.png[Test Coverage,link="https://coveralls.io/r/S-Mach/s_mach.datadiff"] https://github.com/S-Mach/s_mach.datadiff[Code] http://s-mach.github.io/s_mach.datadiff/#s_mach.datadiff.package[Scaladoc]

+s_mach.datadiff+ is an open-source data difference engine for Scala.
Implementations of the +DataDiff+ type-class are provided which can compute the
difference between all data types, +Option+, +Set+, +Seq+, and +Map+. An
implementation for any case case class, tuple or other type that can be
represented as a +struct type+ can be generated at compile-time by the
+mkDataDiff+ macro method. The difference between any two instances is stored as
a +patch type+, which can be user-defined per type. Patches can be applied to
instances of the original type to propagate computed changes. All provided
+DataDiff+ implementations are 100% strongly-typed and use absolutely no
runtime reflection.

== Include in SBT
1. Add to +build.sbt+
+
[source,sbt,numbered]
----
libraryDependencies += "net.s_mach" %% "datadiff" % "0.1-SNAPSHOT"
----
NOTE: +s_mach.datadiff+ is currently only compiled for Scala 2.11 (though 2.10.4
support can be added if there is interest)

== Versioning
+s_mach.datadiff+ uses semantic versioning (http://semver.org/).
+s_mach.datadiff+ does not use the package private modifier. Instead, all code
files outside of the +s_mach.datadiff.impl+ package form the public interface
and are governed by the rules of semantic versioning. Code files inside the
+s_mach.datadiff.impl+ package may be used by downstream applications and
libraries. However, no guarantees are made as to the stability or interface of
code in the +s_mach.datadiff.impl+ package between versions.


== Imports for Examples
All code examples assume the following imports:
[source,scala,numbered]
----
import scala.datadiff._
----

== Example: Compute the difference between case classes
TODO

== Example: Apply a patch
TODO
